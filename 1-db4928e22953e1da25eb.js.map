{"version":3,"sources":["webpack:///./node_modules/github-slugger/index.js","webpack:///./node_modules/is_js/is.js","webpack:///./node_modules/github-slugger/node_modules/emoji-regex/index.js"],"names":["__webpack_require__","emoji","module","exports","BananaSlug","own","Object","hasOwnProperty","whitespace","specials","this","reset","prototype","slug","value","maintainCase","string","toLowerCase","trim","replace","slugger","originalSlug","call","occurrences","create","global","__WEBPACK_AMD_DEFINE_RESULT__","root","undefined","is","VERSION","not","all","any","toString","slice","Array","func","apply","arguments","params","getParams","length","i","comparator","<","a","b","<=",">",">=","compareVersion","version","range","n","match","NaN","op","args","array","isArray","date","domNode","object","nodeType","error","json","nan","number","regexp","sameType","other","tag","api","windowObject","empty","getOwnPropertyNames","existy","falsy","truthy","above","min","decimal","equal","even","finite","isFinite","infinite","Infinity","integer","negative","odd","positive","under","max","within","regexes","affirmative","alphaNumeric","caPostalCode","creditCard","dateString","email","eppPhone","hexadecimal","hexColor","ipv4","ipv6","nanpPhone","socialSecurityNumber","timeString","ukPostCode","url","usZipCode","regexpCheck","test","ip","capitalized","words","split","word","chr","charAt","toUpperCase","endWith","target","position","indexOf","include","lowerCase","palindrome","half","Math","floor","space","charCode","charCodeAt","startWith","upperCase","days","months","day","getDay","dayLightSavingTime","january","Date","getFullYear","july","stdTimezoneOffset","getTimezoneOffset","future","now","getTime","inDateRange","start","end","stamp","inLastMonth","setMonth","getMonth","inLastWeek","setDate","getDate","inLastYear","setFullYear","inNextMonth","inNextWeek","inNextYear","leapYear","year","month","past","quarterOfYear","quarter","today","todayString","toDateString","tomorrow","tomorrowString","weekend","weekday","yesterday","yesterdayString","freeGlobal","freeSelf","self","thisGlobal","Function","document","previousIs","navigator","appVersion","userAgent","vendor","android","androidPhone","androidTablet","blackberry","chrome","desktop","mobile","tablet","edge","firefox","ie","ios","iphone","ipad","ipod","linux","mac","windowsPhone","offline","online","onLine","opera","phantom","safari","windowsTablet","touchDevice","DocumentTouch","windows","propertyCount","count","property","propertyDefined","inArray","sorted","sign","predicate","options","option","interfaces","setInterfaces","setNamespace","setRegexp","name","r","factory"],"mappings":"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","file":"1-db4928e22953e1da25eb.js","sourcesContent":["require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nvar emoji = require('emoji-regex');\n\nmodule.exports = BananaSlug;\nvar own = Object.hasOwnProperty;\nvar whitespace = /\\s/g;\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g;\n\nfunction BananaSlug() {\n  var self = this;\n  if (!(self instanceof BananaSlug)) return new BananaSlug();\n  self.reset();\n}\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\n\n\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  var self = this;\n  var slug = slugger(value, maintainCase === true);\n  var originalSlug = slug;\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++;\n    slug = originalSlug + '-' + self.occurrences[originalSlug];\n  }\n\n  self.occurrences[slug] = 0;\n  return slug;\n};\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\n\n\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null);\n};\n\nfunction slugger(string, maintainCase) {\n  if (typeof string !== 'string') return '';\n  if (!maintainCase) string = string.toLowerCase();\n  return string.trim().replace(specials, '').replace(emoji(), '').replace(whitespace, '-');\n}","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n/*!\n * is.js 0.8.0\n * Author: Aras Atasaygin\n */\n// AMD with global, Node, or global\n;\n\n(function (root, factory) {\n  // eslint-disable-line no-extra-semi\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      // Also create a global in case some scripts\n      // that are loaded still are looking for\n      // a global even when an AMD loader is in use.\n      return root.is = factory();\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is self)\n    root.is = factory();\n  }\n})(this, function () {\n  // Baseline\n\n  /* -------------------------------------------------------------------------- */\n  // define 'is' object and current version\n  var is = {};\n  is.VERSION = '0.8.0'; // define interfaces\n\n  is.not = {};\n  is.all = {};\n  is.any = {}; // cache some methods to call later on\n\n  var toString = Object.prototype.toString;\n  var slice = Array.prototype.slice;\n  var hasOwnProperty = Object.prototype.hasOwnProperty; // helper function which reverses the sense of predicate result\n\n  function not(func) {\n    return function () {\n      return !func.apply(null, slice.call(arguments));\n    };\n  } // helper function which call predicate function per parameter and return true if all pass\n\n\n  function all(func) {\n    return function () {\n      var params = getParams(arguments);\n      var length = params.length;\n\n      for (var i = 0; i < length; i++) {\n        if (!func.call(null, params[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  } // helper function which call predicate function per parameter and return true if any pass\n\n\n  function any(func) {\n    return function () {\n      var params = getParams(arguments);\n      var length = params.length;\n\n      for (var i = 0; i < length; i++) {\n        if (func.call(null, params[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  } // build a 'comparator' object for various comparison checks\n\n\n  var comparator = {\n    '<': function _(a, b) {\n      return a < b;\n    },\n    '<=': function _(a, b) {\n      return a <= b;\n    },\n    '>': function _(a, b) {\n      return a > b;\n    },\n    '>=': function _(a, b) {\n      return a >= b;\n    } // helper function which compares a version to a range\n\n  };\n\n  function compareVersion(version, range) {\n    var string = range + '';\n    var n = +(string.match(/\\d+/) || NaN);\n    var op = string.match(/^[<>]=?|/)[0];\n    return comparator[op] ? comparator[op](version, n) : version == n || n !== n;\n  } // helper function which extracts params from arguments\n\n\n  function getParams(args) {\n    var params = slice.call(args);\n    var length = params.length;\n\n    if (length === 1 && is.array(params[0])) {\n      // support array\n      params = params[0];\n    }\n\n    return params;\n  } // Type checks\n\n  /* -------------------------------------------------------------------------- */\n  // is a given value Arguments?\n\n\n  is.arguments = function (value) {\n    // fallback check is for IE\n    return toString.call(value) === '[object Arguments]' || value != null && typeof value === 'object' && 'callee' in value;\n  }; // is a given value Array?\n\n\n  is.array = Array.isArray || function (value) {\n    // check native isArray first\n    return toString.call(value) === '[object Array]';\n  }; // is a given value Boolean?\n\n\n  is[\"boolean\"] = function (value) {\n    return value === true || value === false || toString.call(value) === '[object Boolean]';\n  }; // is a given value Char?\n\n\n  is[\"char\"] = function (value) {\n    return is.string(value) && value.length === 1;\n  }; // is a given value Date Object?\n\n\n  is.date = function (value) {\n    return toString.call(value) === '[object Date]';\n  }; // is a given object a DOM node?\n\n\n  is.domNode = function (object) {\n    return is.object(object) && object.nodeType > 0;\n  }; // is a given value Error object?\n\n\n  is.error = function (value) {\n    return toString.call(value) === '[object Error]';\n  }; // is a given value function?\n\n\n  is['function'] = function (value) {\n    // fallback check is for IE\n    return toString.call(value) === '[object Function]' || typeof value === 'function';\n  }; // is given value a pure JSON object?\n\n\n  is.json = function (value) {\n    return toString.call(value) === '[object Object]';\n  }; // is a given value NaN?\n\n\n  is.nan = function (value) {\n    // NaN is number :) Also it is the only value which does not equal itself\n    return value !== value;\n  }; // is a given value null?\n\n\n  is['null'] = function (value) {\n    return value === null;\n  }; // is a given value number?\n\n\n  is.number = function (value) {\n    return is.not.nan(value) && toString.call(value) === '[object Number]';\n  }; // is a given value object?\n\n\n  is.object = function (value) {\n    return Object(value) === value;\n  }; // is a given value RegExp?\n\n\n  is.regexp = function (value) {\n    return toString.call(value) === '[object RegExp]';\n  }; // are given values same type?\n  // prevent NaN, Number same type check\n\n\n  is.sameType = function (value, other) {\n    var tag = toString.call(value);\n\n    if (tag !== toString.call(other)) {\n      return false;\n    }\n\n    if (tag === '[object Number]') {\n      return !is.any.nan(value, other) || is.all.nan(value, other);\n    }\n\n    return true;\n  }; // sameType method does not support 'all' and 'any' interfaces\n\n\n  is.sameType.api = ['not']; // is a given value String?\n\n  is.string = function (value) {\n    return toString.call(value) === '[object String]';\n  }; // is a given value undefined?\n\n\n  is.undefined = function (value) {\n    return value === void 0;\n  }; // is a given value window?\n  // setInterval method is only available for window object\n\n\n  is.windowObject = function (value) {\n    return value != null && typeof value === 'object' && 'setInterval' in value;\n  }; // Presence checks\n\n  /* -------------------------------------------------------------------------- */\n  //is a given value empty? Objects, arrays, strings\n\n\n  is.empty = function (value) {\n    if (is.object(value)) {\n      var length = Object.getOwnPropertyNames(value).length;\n\n      if (length === 0 || length === 1 && is.array(value) || length === 2 && is.arguments(value)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return value === '';\n  }; // is a given value existy?\n\n\n  is.existy = function (value) {\n    return value != null;\n  }; // is a given value falsy?\n\n\n  is.falsy = function (value) {\n    return !value;\n  }; // is a given value truthy?\n\n\n  is.truthy = not(is.falsy); // Arithmetic checks\n\n  /* -------------------------------------------------------------------------- */\n  // is a given number above minimum parameter?\n\n  is.above = function (n, min) {\n    return is.all.number(n, min) && n > min;\n  }; // above method does not support 'all' and 'any' interfaces\n\n\n  is.above.api = ['not']; // is a given number decimal?\n\n  is.decimal = function (n) {\n    return is.number(n) && n % 1 !== 0;\n  }; // are given values equal? supports numbers, strings, regexes, booleans\n  // TODO: Add object and array support\n\n\n  is.equal = function (value, other) {\n    // check 0 and -0 equity with Infinity and -Infinity\n    if (is.all.number(value, other)) {\n      return value === other && 1 / value === 1 / other;\n    } // check regexes as strings too\n\n\n    if (is.all.string(value, other) || is.all.regexp(value, other)) {\n      return '' + value === '' + other;\n    }\n\n    if (is.all[\"boolean\"](value, other)) {\n      return value === other;\n    }\n\n    return false;\n  }; // equal method does not support 'all' and 'any' interfaces\n\n\n  is.equal.api = ['not']; // is a given number even?\n\n  is.even = function (n) {\n    return is.number(n) && n % 2 === 0;\n  }; // is a given number finite?\n\n\n  is.finite = isFinite || function (n) {\n    return is.not.infinite(n) && is.not.nan(n);\n  }; // is a given number infinite?\n\n\n  is.infinite = function (n) {\n    return n === Infinity || n === -Infinity;\n  }; // is a given number integer?\n\n\n  is.integer = function (n) {\n    return is.number(n) && n % 1 === 0;\n  }; // is a given number negative?\n\n\n  is.negative = function (n) {\n    return is.number(n) && n < 0;\n  }; // is a given number odd?\n\n\n  is.odd = function (n) {\n    return is.number(n) && n % 2 === 1;\n  }; // is a given number positive?\n\n\n  is.positive = function (n) {\n    return is.number(n) && n > 0;\n  }; // is a given number above maximum parameter?\n\n\n  is.under = function (n, max) {\n    return is.all.number(n, max) && n < max;\n  }; // least method does not support 'all' and 'any' interfaces\n\n\n  is.under.api = ['not']; // is a given number within minimum and maximum parameters?\n\n  is.within = function (n, min, max) {\n    return is.all.number(n, min, max) && n > min && n < max;\n  }; // within method does not support 'all' and 'any' interfaces\n\n\n  is.within.api = ['not']; // Regexp checks\n\n  /* -------------------------------------------------------------------------- */\n  // Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook\n  // Scott Gonzalez: Email address validation\n  // dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two or four digits for the year\n  // eppPhone match extensible provisioning protocol format\n  // nanpPhone match north american number plan format\n  // time match hours, minutes, and seconds, 24-hour clock\n\n  var regexes = {\n    affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,\n    alphaNumeric: /^[A-Za-z0-9]+$/,\n    caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\s?[0-9][A-Z][0-9]$/,\n    creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\n    dateString: /^(1[0-2]|0?[1-9])([\\/-])(3[01]|[12][0-9]|0?[1-9])(?:\\2)(?:[0-9]{2})?[0-9]{2}$/,\n    email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n    // eslint-disable-line no-control-regex\n    eppPhone: /^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x.+)?$/,\n    hexadecimal: /^(?:0x)?[0-9a-fA-F]+$/,\n    hexColor: /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,\n    ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n    ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\n    nanpPhone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n    socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,\n    timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\n    ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,\n    url: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\n    usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/\n  };\n\n  function regexpCheck(regexp, regexes) {\n    is[regexp] = function (value) {\n      return regexes[regexp].test(value);\n    };\n  } // create regexp checks methods from 'regexes' object\n\n\n  for (var regexp in regexes) {\n    if (regexes.hasOwnProperty(regexp)) {\n      regexpCheck(regexp, regexes);\n    }\n  } // simplify IP checks by calling the regex helpers for IPv4 and IPv6\n\n\n  is.ip = function (value) {\n    return is.ipv4(value) || is.ipv6(value);\n  }; // String checks\n\n  /* -------------------------------------------------------------------------- */\n  // is a given string or sentence capitalized?\n\n\n  is.capitalized = function (string) {\n    if (is.not.string(string)) {\n      return false;\n    }\n\n    var words = string.split(' ');\n\n    for (var i = 0; i < words.length; i++) {\n      var word = words[i];\n\n      if (word.length) {\n        var chr = word.charAt(0);\n\n        if (chr !== chr.toUpperCase()) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }; // is string end with a given target parameter?\n\n\n  is.endWith = function (string, target) {\n    if (is.not.string(string)) {\n      return false;\n    }\n\n    target += '';\n    var position = string.length - target.length;\n    return position >= 0 && string.indexOf(target, position) === position;\n  }; // endWith method does not support 'all' and 'any' interfaces\n\n\n  is.endWith.api = ['not']; // is a given string include parameter target?\n\n  is.include = function (string, target) {\n    return string.indexOf(target) > -1;\n  }; // include method does not support 'all' and 'any' interfaces\n\n\n  is.include.api = ['not']; // is a given string all lowercase?\n\n  is.lowerCase = function (string) {\n    return is.string(string) && string === string.toLowerCase();\n  }; // is a given string palindrome?\n\n\n  is.palindrome = function (string) {\n    if (is.not.string(string)) {\n      return false;\n    }\n\n    string = string.replace(/[^a-zA-Z0-9]+/g, '').toLowerCase();\n    var length = string.length - 1;\n\n    for (var i = 0, half = Math.floor(length / 2); i <= half; i++) {\n      if (string.charAt(i) !== string.charAt(length - i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // is a given value space?\n  // horizantal tab: 9, line feed: 10, vertical tab: 11, form feed: 12, carriage return: 13, space: 32\n\n\n  is.space = function (value) {\n    if (is.not[\"char\"](value)) {\n      return false;\n    }\n\n    var charCode = value.charCodeAt(0);\n    return charCode > 8 && charCode < 14 || charCode === 32;\n  }; // is string start with a given target parameter?\n\n\n  is.startWith = function (string, target) {\n    return is.string(string) && string.indexOf(target) === 0;\n  }; // startWith method does not support 'all' and 'any' interfaces\n\n\n  is.startWith.api = ['not']; // is a given string all uppercase?\n\n  is.upperCase = function (string) {\n    return is.string(string) && string === string.toUpperCase();\n  }; // Time checks\n\n  /* -------------------------------------------------------------------------- */\n\n\n  var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n  var months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december']; // is a given dates day equal given day parameter?\n\n  is.day = function (date, day) {\n    return is.date(date) && day.toLowerCase() === days[date.getDay()];\n  }; // day method does not support 'all' and 'any' interfaces\n\n\n  is.day.api = ['not']; // is a given date in daylight saving time?\n\n  is.dayLightSavingTime = function (date) {\n    var january = new Date(date.getFullYear(), 0, 1);\n    var july = new Date(date.getFullYear(), 6, 1);\n    var stdTimezoneOffset = Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());\n    return date.getTimezoneOffset() < stdTimezoneOffset;\n  }; // is a given date future?\n\n\n  is.future = function (date) {\n    var now = new Date();\n    return is.date(date) && date.getTime() > now.getTime();\n  }; // is date within given range?\n\n\n  is.inDateRange = function (date, start, end) {\n    if (is.not.date(date) || is.not.date(start) || is.not.date(end)) {\n      return false;\n    }\n\n    var stamp = date.getTime();\n    return stamp > start.getTime() && stamp < end.getTime();\n  }; // inDateRange method does not support 'all' and 'any' interfaces\n\n\n  is.inDateRange.api = ['not']; // is a given date in last month range?\n\n  is.inLastMonth = function (date) {\n    return is.inDateRange(date, new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date());\n  }; // is a given date in last week range?\n\n\n  is.inLastWeek = function (date) {\n    return is.inDateRange(date, new Date(new Date().setDate(new Date().getDate() - 7)), new Date());\n  }; // is a given date in last year range?\n\n\n  is.inLastYear = function (date) {\n    return is.inDateRange(date, new Date(new Date().setFullYear(new Date().getFullYear() - 1)), new Date());\n  }; // is a given date in next month range?\n\n\n  is.inNextMonth = function (date) {\n    return is.inDateRange(date, new Date(), new Date(new Date().setMonth(new Date().getMonth() + 1)));\n  }; // is a given date in next week range?\n\n\n  is.inNextWeek = function (date) {\n    return is.inDateRange(date, new Date(), new Date(new Date().setDate(new Date().getDate() + 7)));\n  }; // is a given date in next year range?\n\n\n  is.inNextYear = function (date) {\n    return is.inDateRange(date, new Date(), new Date(new Date().setFullYear(new Date().getFullYear() + 1)));\n  }; // is the given year a leap year?\n\n\n  is.leapYear = function (year) {\n    return is.number(year) && (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0);\n  }; // is a given dates month equal given month parameter?\n\n\n  is.month = function (date, month) {\n    return is.date(date) && month.toLowerCase() === months[date.getMonth()];\n  }; // month method does not support 'all' and 'any' interfaces\n\n\n  is.month.api = ['not']; // is a given date past?\n\n  is.past = function (date) {\n    var now = new Date();\n    return is.date(date) && date.getTime() < now.getTime();\n  }; // is a given date in the parameter quarter?\n\n\n  is.quarterOfYear = function (date, quarter) {\n    return is.date(date) && is.number(quarter) && quarter === Math.floor((date.getMonth() + 3) / 3);\n  }; // quarterOfYear method does not support 'all' and 'any' interfaces\n\n\n  is.quarterOfYear.api = ['not']; // is a given date indicate today?\n\n  is.today = function (date) {\n    var now = new Date();\n    var todayString = now.toDateString();\n    return is.date(date) && date.toDateString() === todayString;\n  }; // is a given date indicate tomorrow?\n\n\n  is.tomorrow = function (date) {\n    var now = new Date();\n    var tomorrowString = new Date(now.setDate(now.getDate() + 1)).toDateString();\n    return is.date(date) && date.toDateString() === tomorrowString;\n  }; // is a given date weekend?\n  // 6: Saturday, 0: Sunday\n\n\n  is.weekend = function (date) {\n    return is.date(date) && (date.getDay() === 6 || date.getDay() === 0);\n  }; // is a given date weekday?\n\n\n  is.weekday = not(is.weekend); // is a given dates year equal given year parameter?\n\n  is.year = function (date, year) {\n    return is.date(date) && is.number(year) && year === date.getFullYear();\n  }; // year method does not support 'all' and 'any' interfaces\n\n\n  is.year.api = ['not']; // is a given date indicate yesterday?\n\n  is.yesterday = function (date) {\n    var now = new Date();\n    var yesterdayString = new Date(now.setDate(now.getDate() - 1)).toDateString();\n    return is.date(date) && date.toDateString() === yesterdayString;\n  }; // Environment checks\n\n  /* -------------------------------------------------------------------------- */\n\n\n  var freeGlobal = is.windowObject(typeof global == 'object' && global) && global;\n  var freeSelf = is.windowObject(typeof self == 'object' && self) && self;\n  var thisGlobal = is.windowObject(typeof this == 'object' && this) && this;\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n  var document = freeSelf && freeSelf.document;\n  var previousIs = root.is; // store navigator properties to use later\n\n  var navigator = freeSelf && freeSelf.navigator;\n  var appVersion = (navigator && navigator.appVersion || '').toLowerCase();\n  var userAgent = (navigator && navigator.userAgent || '').toLowerCase();\n  var vendor = (navigator && navigator.vendor || '').toLowerCase(); // is current device android?\n\n  is.android = function () {\n    return /android/.test(userAgent);\n  }; // android method does not support 'all' and 'any' interfaces\n\n\n  is.android.api = ['not']; // is current device android phone?\n\n  is.androidPhone = function () {\n    return /android/.test(userAgent) && /mobile/.test(userAgent);\n  }; // androidPhone method does not support 'all' and 'any' interfaces\n\n\n  is.androidPhone.api = ['not']; // is current device android tablet?\n\n  is.androidTablet = function () {\n    return /android/.test(userAgent) && !/mobile/.test(userAgent);\n  }; // androidTablet method does not support 'all' and 'any' interfaces\n\n\n  is.androidTablet.api = ['not']; // is current device blackberry?\n\n  is.blackberry = function () {\n    return /blackberry/.test(userAgent) || /bb10/.test(userAgent);\n  }; // blackberry method does not support 'all' and 'any' interfaces\n\n\n  is.blackberry.api = ['not']; // is current browser chrome?\n  // parameter is optional\n\n  is.chrome = function (range) {\n    var match = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null;\n    return match !== null && compareVersion(match[1], range);\n  }; // chrome method does not support 'all' and 'any' interfaces\n\n\n  is.chrome.api = ['not']; // is current device desktop?\n\n  is.desktop = function () {\n    return is.not.mobile() && is.not.tablet();\n  }; // desktop method does not support 'all' and 'any' interfaces\n\n\n  is.desktop.api = ['not']; // is current browser edge?\n  // parameter is optional\n\n  is.edge = function (range) {\n    var match = userAgent.match(/edge\\/(\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // edge method does not support 'all' and 'any' interfaces\n\n\n  is.edge.api = ['not']; // is current browser firefox?\n  // parameter is optional\n\n  is.firefox = function (range) {\n    var match = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // firefox method does not support 'all' and 'any' interfaces\n\n\n  is.firefox.api = ['not']; // is current browser internet explorer?\n  // parameter is optional\n\n  is.ie = function (range) {\n    var match = userAgent.match(/(?:msie |trident.+?; rv:)(\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // ie method does not support 'all' and 'any' interfaces\n\n\n  is.ie.api = ['not']; // is current device ios?\n\n  is.ios = function () {\n    return is.iphone() || is.ipad() || is.ipod();\n  }; // ios method does not support 'all' and 'any' interfaces\n\n\n  is.ios.api = ['not']; // is current device ipad?\n  // parameter is optional\n\n  is.ipad = function (range) {\n    var match = userAgent.match(/ipad.+?os (\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // ipad method does not support 'all' and 'any' interfaces\n\n\n  is.ipad.api = ['not']; // is current device iphone?\n  // parameter is optional\n\n  is.iphone = function (range) {\n    // original iPhone doesn't have the os portion of the UA\n    var match = userAgent.match(/iphone(?:.+?os (\\d+))?/);\n    return match !== null && compareVersion(match[1] || 1, range);\n  }; // iphone method does not support 'all' and 'any' interfaces\n\n\n  is.iphone.api = ['not']; // is current device ipod?\n  // parameter is optional\n\n  is.ipod = function (range) {\n    var match = userAgent.match(/ipod.+?os (\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // ipod method does not support 'all' and 'any' interfaces\n\n\n  is.ipod.api = ['not']; // is current operating system linux?\n\n  is.linux = function () {\n    return /linux/.test(appVersion);\n  }; // linux method does not support 'all' and 'any' interfaces\n\n\n  is.linux.api = ['not']; // is current operating system mac?\n\n  is.mac = function () {\n    return /mac/.test(appVersion);\n  }; // mac method does not support 'all' and 'any' interfaces\n\n\n  is.mac.api = ['not']; // is current device mobile?\n\n  is.mobile = function () {\n    return is.iphone() || is.ipod() || is.androidPhone() || is.blackberry() || is.windowsPhone();\n  }; // mobile method does not support 'all' and 'any' interfaces\n\n\n  is.mobile.api = ['not']; // is current state offline?\n\n  is.offline = not(is.online); // offline method does not support 'all' and 'any' interfaces\n\n  is.offline.api = ['not']; // is current state online?\n\n  is.online = function () {\n    return !navigator || navigator.onLine === true;\n  }; // online method does not support 'all' and 'any' interfaces\n\n\n  is.online.api = ['not']; // is current browser opera?\n  // parameter is optional\n\n  is.opera = function (range) {\n    var match = userAgent.match(/(?:^opera.+?version|opr)\\/(\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // opera method does not support 'all' and 'any' interfaces\n\n\n  is.opera.api = ['not']; // is current browser phantomjs?\n  // parameter is optional\n\n  is.phantom = function (range) {\n    var match = userAgent.match(/phantomjs\\/(\\d+)/);\n    return match !== null && compareVersion(match[1], range);\n  }; // phantom method does not support 'all' and 'any' interfaces\n\n\n  is.phantom.api = ['not']; // is current browser safari?\n  // parameter is optional\n\n  is.safari = function (range) {\n    var match = userAgent.match(/version\\/(\\d+).+?safari/);\n    return match !== null && compareVersion(match[1], range);\n  }; // safari method does not support 'all' and 'any' interfaces\n\n\n  is.safari.api = ['not']; // is current device tablet?\n\n  is.tablet = function () {\n    return is.ipad() || is.androidTablet() || is.windowsTablet();\n  }; // tablet method does not support 'all' and 'any' interfaces\n\n\n  is.tablet.api = ['not']; // is current device supports touch?\n\n  is.touchDevice = function () {\n    return !!document && ('ontouchstart' in freeSelf || 'DocumentTouch' in freeSelf && document instanceof DocumentTouch);\n  }; // touchDevice method does not support 'all' and 'any' interfaces\n\n\n  is.touchDevice.api = ['not']; // is current operating system windows?\n\n  is.windows = function () {\n    return /win/.test(appVersion);\n  }; // windows method does not support 'all' and 'any' interfaces\n\n\n  is.windows.api = ['not']; // is current device windows phone?\n\n  is.windowsPhone = function () {\n    return is.windows() && /phone/.test(userAgent);\n  }; // windowsPhone method does not support 'all' and 'any' interfaces\n\n\n  is.windowsPhone.api = ['not']; // is current device windows tablet?\n\n  is.windowsTablet = function () {\n    return is.windows() && is.not.windowsPhone() && /touch/.test(userAgent);\n  }; // windowsTablet method does not support 'all' and 'any' interfaces\n\n\n  is.windowsTablet.api = ['not']; // Object checks\n\n  /* -------------------------------------------------------------------------- */\n  // has a given object got parameterized count property?\n\n  is.propertyCount = function (object, count) {\n    if (is.not.object(object) || is.not.number(count)) {\n      return false;\n    }\n\n    var n = 0;\n\n    for (var property in object) {\n      if (hasOwnProperty.call(object, property) && ++n > count) {\n        return false;\n      }\n    }\n\n    return n === count;\n  }; // propertyCount method does not support 'all' and 'any' interfaces\n\n\n  is.propertyCount.api = ['not']; // is given object has parameterized property?\n\n  is.propertyDefined = function (object, property) {\n    return is.object(object) && is.string(property) && property in object;\n  }; // propertyDefined method does not support 'all' and 'any' interfaces\n\n\n  is.propertyDefined.api = ['not']; // Array checks\n\n  /* -------------------------------------------------------------------------- */\n  // is a given item in an array?\n\n  is.inArray = function (value, array) {\n    if (is.not.array(array)) {\n      return false;\n    }\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // inArray method does not support 'all' and 'any' interfaces\n\n\n  is.inArray.api = ['not']; // is a given array sorted?\n\n  is.sorted = function (array, sign) {\n    if (is.not.array(array)) {\n      return false;\n    }\n\n    var predicate = comparator[sign] || comparator['>='];\n\n    for (var i = 1; i < array.length; i++) {\n      if (!predicate(array[i], array[i - 1])) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // API\n  // Set 'not', 'all' and 'any' interfaces to methods based on their api property\n\n  /* -------------------------------------------------------------------------- */\n\n\n  function setInterfaces() {\n    var options = is;\n\n    for (var option in options) {\n      if (hasOwnProperty.call(options, option) && is['function'](options[option])) {\n        var interfaces = options[option].api || ['not', 'all', 'any'];\n\n        for (var i = 0; i < interfaces.length; i++) {\n          if (interfaces[i] === 'not') {\n            is.not[option] = not(is[option]);\n          }\n\n          if (interfaces[i] === 'all') {\n            is.all[option] = all(is[option]);\n          }\n\n          if (interfaces[i] === 'any') {\n            is.any[option] = any(is[option]);\n          }\n        }\n      }\n    }\n  }\n\n  setInterfaces(); // Configuration methods\n  // Intentionally added after setInterfaces function\n\n  /* -------------------------------------------------------------------------- */\n  // change namespace of library to prevent name collisions\n  // var preferredName = is.setNamespace();\n  // preferredName.odd(3);\n  // => true\n\n  is.setNamespace = function () {\n    root.is = previousIs;\n    return this;\n  }; // set optional regexes to methods\n\n\n  is.setRegexp = function (regexp, name) {\n    for (var r in regexes) {\n      if (hasOwnProperty.call(regexes, r) && name === r) {\n        regexes[r] = regexp;\n      }\n    }\n  };\n\n  return is;\n});","module.exports = function () {\n  return /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};"],"sourceRoot":""}